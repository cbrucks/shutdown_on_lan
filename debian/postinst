#!/bin/bash

## WARNING - If this script is edited in Windows the line endings need to be 
## modified to conform to the Unix standard.  Replace all instances of \r\n with
## \n.

## postinst; Debian package script run after the package has been installed

## This script is used to configure the Shutdown On LAN (SOL) service on Ubuntu
## 14.04 LTS.  This installation might work in other versions of Ubuntu but has
## only been test with the aforementioned release.

## Specifies the name of the executable installed by the package
exefilename="sol"

## Specifies the name of the user used to run the service
username="sol"

## Gets the name of this script to show proper usage
scriptname=`basename "$0"`

NO_COLOR='\033[m'
BLACK='\033[0;30m'     
RED='\033[0;31m'     
GREEN='\033[0;32m'     
BROWN='\033[0;33m'     
BLUE='\033[0;34m'     
PURPLE='\033[0;35m'     
CYAN='\033[0;36m'     
LIGHT_GRAY='\033[0;37m'     
DARK_GRAY='\033[1;30m'
LIGHT_RED='\033[1;31m'
LIGHT_GREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHT_BLUE='\033[1;34m'
LIGHT_PURPLE='\033[1;35m'
LIGHT_CYAN='\033[1;36m'
WHITE='\033[1;37m'

echo_success()
{
    cecho $GREEN "Success"
}

echo_failure()
{
    if [ $# -ge 1 ]
    then
        cecho $RED $@
    fi
}

echo_task()
{
    if [ $# -ge 1 ]
    then
        cecho $CYAN $@ "  "
    fi
}

cecho()
{
    if [ $# -ge 2 ]
    then
        color="$1"
        shift # shift out the specified color
        if [ $# -ge 3 ] &&
           [ "$1" == "-n" ]
        then
            shift # shift out the -n flag
            echo -ne "${color}${@}${NO_COLOR}"
        else
            echo -e "${color}${@}${NO_COLOR}"
        fi
    fi
}

set_file_attributes()
{
    ## check for the minimum number of parameters
    if [ $# -ge 3 ]
    then
        permissions=$1
        owner_group=$2
        file=$3
    
        ## check that the file exists
        if [ -f "$file" ]
        then
            ## Modify the owner and group of the file
            chown $owner_group "$file"
            if [ $? -ne 0 ]
            then
                echo_failure "Failed to change the ownership of '$file'!"
                return 1
            fi
            ## Modify the permissions set on the file
            chmod $permissions "$file"
            if [ $? -ne 0 ]
            then
                echo_failure "Failed to change the permissions of '$file'!"
                return 1
            fi
        else
            echo_failure "The file path $file does not exist"
            return 1
        fi
    else
        echo_failure "A file path is required"
        return 1
    fi
    
    return 0
}

## The command passed to the script that specifies the situation in which the 
## script has been called. Possible values include:
##   (1) postinst configure most-recently-configured-version
##   (2) old-postinst abort-upgrade new-version
##   (3) conflictor's-postinst abort-remove in-favor package new-version
##   (4) postinst abort-remove
##   (5) deconfigured's-postinst abort-deconfigure in-favor failed-install-package version [removing conflicting-package version]
## See chapter 6 of the Debian policy manual for more information 
## (https://www.debian.org/doc/debian-policy/ch-maintainerscripts.html)
command=$1
version=""
if [ "$command" == "configure" ] ||
   [ "$command" == "abort-upgrade" ]
then
    if [ "$#" == 2 ]
    then
        ## Covers usages (1) and (2)
        ## The version number associated with the given command (see above comment)
        version=$2
    else
        version="0.0.1"
    fi
elif [ "$command" == "abort-remove" ]
then 
    ## Check the number of arguments to determine the usage
    if [ "$#" == 1 ]
    then
        ## Covers usage (4)
        ## TODO determine a good default here
        version="0.0.1"
    elif [ "$#" == 4 ] && 
         [ "$2" == "in-favor" ]
    then
        ## Covers usage (3)
        version=$4
    fi
elif [ "$command" == "abort-deconfigure" ]
then
    if [ "$#" == ] && 
       [ "$2" == "in-favor" ] && 
       [ "$3" == failed-instal-package ]
    then
        ## Covers usage (5)
        version=$4
    fi
else
    ## The command was not recognized
    command=""
fi

# if [ "$command" == "" ] || [ "$version" == "" ]
# then
    # echo "Unsupported usage format '$scriptname $@'"
    # echo "  use one of the following:"
    # echo "    $scriptname configure most-recently-configured-version"
    # echo "    $scriptname abort-upgrade new-version"
    # echo "    $scriptname abort-remove in-favor package new-version"
    # echo "    $scriptname abort-remove"
    # echo "    $scriptname abort-deconfigure in-favor failed-install-package version [removing conflicting-package version]"
    # exit 1
# fi

## Add a user that will run the service
## The user does not require login privileges
## The user does not require a home directory
echo_task "Creating the user '$username' and group '$username'...  "
adduser --system --no-create-home --group $username
## Verify the user was added successfully
if [ $? -ne 0 ]
then
    echo_failure "Failed to create the '$username' user!"
    exit 1
fi

## The user must be a member of the "syslog" group (Grants read/write access to
## the /var/log directory)
echo_task "Adding the user '$username' to the 'syslog' group...  "
adduser $username syslog
if [ $? -ne 0 ]
then
    echo_failure "Failed to add the user '$username' to the 'syslog' group!"
    exit 1
fi

## Ensure the package files have the correct permissions
echo_task "Configuring file ownership and permissions...  "
## find the executable installation directory
exefilepath=`which "$exefilename"`
if [ $? -ne 0 ]
then
    echo_failure "Failed to find the executable '$exefilename'!"
    exit 1
fi
## Configure the executable attributes
set_file_attributes 755 root:$username "$exefilepath"
if [ $? -ne 0 ]
then
    echo_failure "Failed to configure the file attributes for $exefilepath!"
    exit 1
fi

# Configure the init.d script attributes
set_file_attributes 755 root:root "/etc/init.d/$exefilename"
if [ $? -ne 0 ]
then
    echo_failure "Failed to configure the ile attributes for /etc/init.d/$exefilename!"
    exit 1
fi

# Register the init.d script with the initsystem
echo_task "Configuring the initscript system interface..."
update-rc.d "$exefilename" defaults
if [ $? -ne 0 ]
then
    echo_failure "Failed to setup the initscripts!"
    exit 1
fi

## The script completed successfully
exit 0
